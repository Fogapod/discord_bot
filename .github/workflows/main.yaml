name: CI

on:
  pull_request:
  push:
    branches:
      - main

env:
  IMAGE_NAME: fogapod/pink

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - uses: pre-commit/action@v2.0.3

  deploy:
    needs: [lint]
    if: ${{ github.event_name == 'push' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build image
        run: |
          docker pull $IMAGE_NAME
          docker build --pull --cache-from $IMAGE_NAME -t $IMAGE_NAME:latest . \
            --build-arg GIT_BRANCH=$(git rev-parse --abbrev-ref HEAD) \
            --build-arg GIT_COMMIT=$(git rev-parse HEAD) \
            --build-arg GIT_DIRTY=$(git status --porcelain=v1 2>/dev/null | wc -l)
      - name: Log in into Docker Hub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Push image to registry
        run: |
          docker push $IMAGE_NAME

# generated by maturin
# TODO: customize this

# name: CI

# on:
#   push:
#   pull_request:

# jobs:
#   linux:
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v2
#     - uses: messense/maturin-action@v1
#       with:
#         manylinux: auto
#         command: build
#         args: --release -o dist
#     - name: Upload wheels
#       uses: actions/upload-artifact@v2
#       with:
#         name: wheels
#         path: dist

#   windows:
#     runs-on: windows-latest
#     steps:
#     - uses: actions/checkout@v2
#     - uses: messense/maturin-action@v1
#       with:
#         command: build
#         args: --release --no-sdist -o dist
#     - name: Upload wheels
#       uses: actions/upload-artifact@v2
#       with:
#         name: wheels
#         path: dist

#   macos:
#     runs-on: macos-latest
#     steps:
#     - uses: actions/checkout@v2
#     - uses: messense/maturin-action@v1
#       with:
#         command: build
#         args: --release --no-sdist -o dist --universal2
#     - name: Upload wheels
#       uses: actions/upload-artifact@v2
#       with:
#         name: wheels
#         path: dist

#   release:
#     name: Release
#     runs-on: ubuntu-latest
#     if: "startsWith(github.ref, 'refs/tags/')"
#     needs: [ macos, windows, linux ]
#     steps:
#       - uses: actions/download-artifact@v2
#         with:
#           name: wheels
#       - name: Publish to PyPI
#         uses: messense/maturin-action@v1
#         env:
#           MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
#         with:
#           command: upload
#           args: --skip-existing *